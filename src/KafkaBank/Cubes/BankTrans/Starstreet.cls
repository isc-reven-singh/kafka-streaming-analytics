/// Dimension table for cube 'BankTrans'
/// THIS IS A GENERATED CLASS, DO NOT EDIT.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
Class KafkaBank.Cubes.BankTrans.Starstreet Extends %DeepSee.DimensionTable [ GeneratedBy = KafkaBank.Cubes.BankTrans.CLS, Owner = {}, ProcedureBlock ]
{

Index Primary On (Dxcity, Dxstreet) [ Unique ];

/// Dimension property: Dxcity<br/>
/// Source: city
Property Dxcity As KafkaBank.Cubes.BankTrans.Starcity [ Required ];

/// Dimension property: Dxstreet<br/>
/// Source: street
Property Dxstreet As %String(COLLATION = "SQLUPPER(113)", MAXLEN = 2000) [ Required ];

/// Return the total number of members within this dimension.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod %Count() As %Integer
{
 Set tCount = 0
 &sql(SELECT COUNT(*) INTO :tCount FROM KafkaBank_Cubes_BankTrans.Starstreet)
 Quit tCount
}

/// Validate the KEY value for this dimension.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod DxstreetIsValid(pArg As %String) As %Status
{
 Quit ##class(%DeepSee.DimensionTable).%ValidateKEY(pArg)
}

/// Return the specification string for the given member.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod %GetMemberSpec(pMemberId As %String, pCubeName As %String, pDimNo As %Integer, pHierNo As %Integer, pLevelNo As %Integer) As %String
{
 Set tSpec = ""
 Set:pMemberId'="" tSpec = "&["_$$$dsEscapeIdent(..DxstreetGetStored(pMemberId))_"]"
 Quit tSpec
}

/// Fetch the value of a given dimension property.<br/>
/// Generated by %DeepSee.Generator:%CreateStarTable.
ClassMethod %GetDimensionProperty(pProp As %String, pID As %String, Output pFormat As %String, Output pType As %String) As %String
{
 Set pProp = $$$UPPER(pProp)
 Set tValue=""
 Set pFormat=""
 If (pProp="DXCITY") {
  &sql(SELECT Dxcity INTO :tValue FROM KafkaBank_Cubes_BankTrans.Starstreet WHERE %ID = :pID)
  Set pType="KafkaBank.Cubes.BankTrans.Starcity"
 }
 ElseIf (pProp="DXSTREET") {
  &sql(SELECT Dxstreet INTO :tValue FROM KafkaBank_Cubes_BankTrans.Starstreet WHERE %ID = :pID)
  Set pType="%String"
 }
 Quit tValue
}

Parameter CUBENAME = "BankTrans";

Parameter DESCRIPTIONPROPERTY;

Parameter KEYPROPERTY = "Dxstreet";

ForeignKey Dxcity(Dxcity) References KafkaBank.Cubes.BankTrans.Starcity() [ NoCheck ];

Storage Default
{
<Data name="StarstreetDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Dxcity</Value>
</Value>
<Value name="3">
<Value>Dxstreet</Value>
</Value>
</Data>
<DataLocation>^DeepSee.Dimension("KAFKABANK.CUBES.BANKTRANS.STARSTREET")</DataLocation>
<DefaultData>StarstreetDefaultData</DefaultData>
<ExtentSize>100</ExtentSize>
<IdLocation>^DeepSee.Dimension("KAFKABANK.CUBES.BANKTRANS.STARSTREET")</IdLocation>
<IndexLocation>^DeepSee.DimensionI("KAFKABANK.CUBES.BANKTRANS.STARSTREET")</IndexLocation>
<StreamLocation>^DeepSee.DimensionS("KAFKABANK.CUBES.BANKTRANS.STARSTREET")</StreamLocation>
<Type>%Storage.Persistent</Type>
}

}
